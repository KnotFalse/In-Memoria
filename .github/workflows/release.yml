name: Release

on:
  # Disabled for now - focusing on features first
  # push:
  #   tags:
  #     - 'v*'
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        settings:
          - host: macos-latest
            target: x86_64-apple-darwin
            build: npm run build:rust -- --target x86_64-apple-darwin
            
          - host: macos-latest
            target: aarch64-apple-darwin
            build: npm run build:rust -- --target aarch64-apple-darwin
            
          - host: windows-latest
            target: x86_64-pc-windows-msvc
            build: npm run build:rust -- --target x86_64-pc-windows-msvc
            
          - host: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            build: npm run build:rust -- --target x86_64-unknown-linux-gnu
            
    name: Build ${{ matrix.settings.target }}
    runs-on: ${{ matrix.settings.host }}
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.settings.target }}
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build TypeScript
        run: npm run build
        
      - name: Build Rust
        run: ${{ matrix.settings.build }}
        working-directory: rust-core
        
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: bindings-${{ matrix.settings.target }}
          path: rust-core/*.node
          if-no-files-found: error

  publish:
    name: Publish to npm
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          registry-url: https://registry.npmjs.org/
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build TypeScript
        run: npm run build
        
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          
      - name: Move binaries to rust-core
        run: |
          cp artifacts/bindings-*/rust-core/*.node rust-core/
          ls -la rust-core/*.node
          
      - name: Publish to npm
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}